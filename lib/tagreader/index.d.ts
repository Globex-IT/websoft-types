
/**
 * Объект TagReader предназначен для последовательного чтения содержимого в формате HTML (реже - XML).
 * В каждый определенный момент `TagReader` указывает на некотрый текщий тэг, до которого дошло чтение.
 * Текст, находящий между тэгами, считается безымянным тэгом (атрибут `TagName` вернет пустую строку)
 */
interface TagReader {
    /**
     * Возвращает массив, состоящий из наименований всех атрибутов текущего тега.
     */
    readonly AttrNames: string[];
    /**
     * Для комментариев возвращает текст комментария, для именных тегов возвращает `undefined`, для безымянных тегов,
     * не являющихся комментариями - возвращает пустую строку.
     */
    readonly Comment: string | undefined;
    /**
     * Номер строки (начиная с нуля), в которой находится текущий указатель.
     */
    readonly CurLineIndex: number;
    /**
     * Возвращает `true`, если `TagReader` дошел до конца текста (находится в конце последнего тега), и `false`, если нет.
     */
    readonly EOF: boolean;
    /**
     * Атрибут доступен на запись. `True` означает, что все тэги, при считывании, будут приведены к нижнему регистру.
     * `False` означает, что теги будут читаться без приведения к нижнему регистру. По умолчанию имеет значение `true`.
     */
    ForceLowerCase: boolean;
    /**
     * Возвращает `true`, если текущий тег является групповым (т.е. открывающим), и `false`, если не является.
     */
    readonly IsGroupTag: boolean;
    /**
     * Для именных тегов возвращает `undefined`. Для безымянных тегов, содержащих прочий текст (<?...?>), возвращает текст
     * без дополнительных символов. Для простого текста возвращает обычную строку.
     */
    readonly MiscText: string | undefined;
    /**
     * Для безымянных тегов возвращает текст тега, конвертированный в простой текст без дополнительных символов.
     * Для именованных тегов возвращает `undefined`, для комментариев возвращается пустая строка.
     */
    readonly PlainText: string | undefined;
    /**
     * Если указатель стоит на тексте между тегами, то возвращает этот текст в исходном виде, иначе - `undefined`.
     */
    readonly RawText: string | undefined;
    /**
     * Имя текущего тега (без скобок). Если указатель стоит на тексте или комментарий, возвращается пустая строка.
     */
    readonly TagName: string;
    /**
     * Возвращает текущую позицию указателя внутри документа (в символах), относительно начала читаемых данных.
     */
    readonly TagPos: number;
    /**
     * Возвращает строку с текущим тегом в каноническом виде (скобки, атрибуты). Если текущая позиция указывает не на именной тег, возвращает `undefined`.
     */
    readonly TagStr: string | undefined;
}

interface TagReaderConstructor {
    /** Содержимое в формате `HTML` или `XML`  */
    new(data: string): TagReader;
    (data: string): TagReader;
}

declare var TagReader: TagReaderConstructor;
